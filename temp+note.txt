spark-shell --conf spark.hbase.host=quickstart.cloudera,hbase.zookeeper.quorum=quickstart.cloudera,hbase.zookeeper.property.clientPort=2181 --packages it.nerdammer.bigdata:spark-hbase-connector_2.10:1.0.3 --exclude-packages org.slf4j:slf4j-api





/**
 * 
 * save the items of this rdd to a hbase table
 * @param rdd
 */
def saveFlightPerformanceRDD(rdd: RDD[Reading]) : Unit = {
	rdd.map(r => r.toTuple)
	 	.toHBaseTable("mvment")
	    .toColumns("trajId", "lat", "lon", "alt", "ts", "userId")
	    .inColumnFamily("main")
	    .save()
}

(row.getAs[JShort]("year"), row.getAs[JByte]("month"), row.getAs[JByte]("dayofmonth"), row.getAs[JByte]("dayofweek"), 
row.getAs[JShort]("deptime"), row.getAs[JShort]("crsdeptime"), row.getAs[JShort]("arrtime"), row.getAs[JShort]("crsarrtime"), 
row.getAs[String]("uniquecarrier"), row.getAs[String]("flightnum"), row.getAs[String]("tailnum"), 
row.getAs[JShort]("actualelapsedtime"), row.getAs[JShort]("crselapsedtime"), row.getAs[JShort]("airtime"), row.getAs[JShort]("arrdelay"), row.getAs[JShort]("depdelay"), 
row.getAs[String]("origin"), row.getAs[String]("dest"), row.getAs[JShort]("distance"), 
row.getAs[String]("taxiin"), row.getAs[String]("taxiout"), row.getAs[String]("cancelled"), row.getAs[String]("cancellationcode"), row.getAs[String]("diverted"), 
row.getAs[JShort]("carrierdelay"), row.getAs[JShort]("weatherdelay"), row.getAs[JShort]("nasdelay"), row.getAs[JShort]("securitydelay"), row.getAs[JShort]("lateaircraftdelay"))

